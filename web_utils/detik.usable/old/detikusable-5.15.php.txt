<?
$app['name'] = "detik.usable";
$app['version'] = "5.15";
$app['version_description'] = <<<__END__

News news yall,

detik.usable now has been modularized, and will be distributed into two different packages:

1. Single file distribution: normal one file php such as this one, distributed as single text/php file, support auto-update.

2. Modularized: one main file plus 17 or more includes file, distributed as a single compressed package file, does not support auto-update, yet.

The purpose of modularization is for near-future integration to many open source CMS modules in the market, which will be first released for Mambo (component and site module). Detik.Usable core functions has been grouped into DetikUsable class, which should be easyly integrated into any of your PHP codes, just by looking on the samples inside the modularized package. AnyNews has been taken out into a subclass of DetikUsable class to reduce code base, although for the time being, it requires cross functionality inside AnyNews class to provide additional help in making sense of difficult contents.

The other advantage is easy code maintenance. This has been the case since the code base has reached more than 2000 lines. This single-file distribution was in fact generated from modular distribution and combined (and strip extraneous comments/lines) into a single file by a nifty in-house Python script, which should be easily converted into PHP by any interested parties. Future code contributions should be directed to the modularized package.
__END__;
/**
    detik.usable: a fast-download detik.com
    Author: dody suria wijaya <dodysw@gmail.com>
    License: THIS IS A PUBLIC DOMAIN CODE (you may even change the author)
    Term of Usage: BY USING THIS SCRIPT, YOU TAKE FULL RESPONSIBILITY OF ANY LEGAL ACTION THAT MAY BE TAKEN.
*/
$app['proxy_mode'] = False;
$app['proxy_url'] = '';
$app['ads'] = TRUE;
$app['cache'] = TRUE;
$app['http_proxy']['enable'] = FALSE;
$app['http_proxy']['hostname'] = 'proxy.myoffice.com';
$app['http_proxy']['port'] = '8080';
$app['http_proxy']['user'] = 'myproxyusername';
$app['http_proxy']['pass'] = 'myproxypassword';
$app['timediff'] = '+0';
$app['url_list'] = 'http://jkt1.detik.com/index.php';
$app['update_url'] = 'http://miaw.tcom.ou.edu/~dody/du/detikusable-latest.php.txt';
$author_email = 'dodysw@gmail.com';
$author_name = 'Dody Suria Wijaya';
$author_website = 'http://miaw.tcom.ou.edu/~dody/';
$app['hosted_by'] = get_current_user();
$contributors = array(
    array('Mico Wendy','mico@konsep.net','Bug fix: php'),
    array('rudych@gmail.com','rudych@gmail.com','Bug fix: rss'),
    array('Ronny Haryanto','ronny@haryan.to','Bug fix: rss'),
    array('Reno S. Anwari','sireno@gmail.com','Timezone'),
    );
$an_m = array(
    array('name'=>'detikcom','url'=>'http://jkt1.detik.com/index.php'),
    array('name'=>'detikcom(USA)','url'=>'http://jkt2.detik.com/index.php'),
    array('name'=>'Kompas','url'=>'http://www.kompas.co.id/index.htm'),
    array('name'=>'Kompas(LN)','url'=>'http://www.kompas.com/index1.htm'),
    array('name'=>'Media&nbsp;Indonesia','url'=>'http://www.mediaindo.co.id/main.asp'),
    array('name'=>'Jakarta&nbsp;Post','url'=>'http://www.thejakartapost.com/headlines.asp'),
    array('name'=>'Antara','url'=>'http://www.antara.co.id/'),
    array('name'=>'Republika','url'=>'http://www.republika.co.id/'),
    array('name'=>'Koran&nbsp;Tempo','url'=>'http://www.korantempo.com/'),
    array('name'=>'Tempo&nbsp;Interaktif','url'=>'http://www.tempointeraktif.com/'),
    array('name'=>'Tempo&nbsp;Interactive','url'=>'http://www.tempointeractive.com/'),
    array('name'=>'Suara&nbsp;Pembaruan','url'=>'http://www.suarapembaruan.com/index.htm'),
    array('name'=>'Pikiran&nbsp;Rakyat','url'=>'http://www.pikiran-rakyat.com/cetak/'),
    array('name'=>'Suara&nbsp;Merdeka','url'=>'http://www.suaramerdeka.com/'),
    array('name'=>'Jawa&nbsp;Pos','url'=>'http://www.jawapos.com/'),
    array('name'=>'BBC&nbsp;Indonesia','url'=>'http://www.bbc.co.uk/indonesian/'),
    array('name'=>'ABC&nbsp;Radio&nbsp;Aus-Indo','url'=>'http://www.abc.net.au/ra/indon/'),
    array('name'=>'Warta&nbsp;Ekonomi','url'=>'http://www.wartaekonomi.com/'),
    array('name'=>'SWA','url'=>'http://www.swa.co.id/'),
    array('name'=>'Gatra','url'=>'http://www.gatra.com/'),
    array('name'=>'Infokomputer','url'=>'http://www.infokomputer.com/'),
    array('name'=>'Pos&nbsp;Kota','url'=>'http://www.poskota.co.id/poskota/index.asp'),
    array('name'=>'Indonesian&nbsp;Business','url'=>'http://articles.ibonweb.com/default.asp'),
    array('name'=>'Berita&nbsp;Iptek','url'=>'http://www.beritaiptek.com/')
);
$hari = array('Minggu','Senin','Selasa','Rabu','Kamis','Jum\'at','Sabtu');
$bulan = array('','Januari','Februari','Maret','April','Mei','Juni','July','Agustus','September','Oktober','November','Desember');
$develmode = 0;
$list_footer = '';
if (file_exists('config.inc.php')) include 'config.inc.php';
function merge_query($newquery) {
    foreach (array_merge($_GET,$newquery) as $k=>$v) $temparr[] = urlencode($k).'='.urlencode($v);
    return implode('&amp;',$temparr);
}
function show_footer ($temp_orig, $temp_stream) {
    global $author_email, $author_website, $app, $list_footer;
    $temp_pm = 'DU Proxy: '.($app['proxy_mode']? 'Yeah': 'Nope');
    $temp_htp = 'HTTP Proxy: '.($app['http_proxy']['enable']? 'Yeah': 'Nope');
    $temp_zlib = "Compression Support: "; if (extension_loaded('zlib')) $temp_zlib .= 'Yeah'; else $temp_zlib .= 'Nope';
    echo $list_footer;
?>
<div class="footer">
    <a href="mailto:<?=$author_email?>" target="_top">author</a> |
    <a href="<?=$temp_orig?>" target="_top">Original page</a> |
    Generated by <a href="<?=$author_website?>" target="_top"><?=$app['name']?> v<?=$app['version']?></a>
    <BR>
    <small>Host: <?=$app['hosted_by']?> |
        <?=$temp_pm?> |
        <?=$temp_htp?> |
        <?=$temp_stream?>
    </small>
</div>
</body>
</html>
<?
}
function mystripslashes($val) {
    return get_magic_quotes_gpc()? stripslashes($val) : $val;
}
$ctime	= strtotime((-1*$app['timediff'])." hours");
$timezone_sign = ((7+$app['timediff']) >= 0)? '+':'';
$tgl_lengkap = $hari[date('w',$ctime)].',&nbsp;'.date('j',$ctime).'&nbsp;'.$bulan[date('n',$ctime)].date(' Y',$ctime).'&mdash;'.date('H:i',$ctime).' GMT'.$timezone_sign.($app['timediff']+7);
$doctype = '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">';
$header_ouput = "$doctype<html><head><title>detik.usable ($tgl_lengkap)</title><style>body{font-family:verdana;}.o{font-size:11pt;}.p{font-size:13pt;}h1{font-family:georgia;font-size:18pt;align:center;margin-bottom:0;}.s{color:#991111;font-weight:bold;}</style></head><body bgcolor=#ffffff>";
$list_header_output = "$doctype<html><head><title>detik.usable ($tgl_lengkap)</title>
<style>
body{font-family:Tahoma,verdana,arial;}
.i{font-size:10pt;font-weight:bold;font-family:verdana;}
.j{font-family:arial;font-size:12pt;font-weight:bold;}
.u{font-family:Georgia,'Times New Roman',Times,serif;font-weight:normal;}
.s{color:#991111;font-weight:bold;}
a{text-decoration:none;}
a:hover{text-decoration:underline;}
.button {font-size:10pt;background:#D6E7EF;border-bottom:1px solid #104A7B;border-right:1px solid #104A7B;border-left: 1px solid #AFC4D5;border-top:1px solid #AFC4D5;color:#000066;margin:2;}
.d{font-size:smaller;color:#555}
.footer {clear:both;border:none;background:#e3ebe2;margin-top:20px;padding-left:30px;padding-top:10px;padding-bottom: 10px;}
.footer a:link{color:#666666;}
.footer a:active,.footer a:hover{color:#006486;}
.footer a:visited{color:#949494;}
h1{font-size:120%;}
h3{font-size:140%;margin-top:0;}
</style>
</head><body bgcolor=#ffffff>";
$list_top_output2 = "<p style='margin-bottom:0;'><b><a href='$author_website' title=Home target=_top><span style=color:#991111;>detik</span>.<span style=color:#119911;>usable</span></a></b> // ";
$list_top_output = '<div align=center><h1 style="margin:0;"><b><a href="'.$author_website.'" title="Home" target="_top"><span style="color:#991111;">detik</span>.<span style="color:#119911;">usable</span></a></h1><small>'.$tgl_lengkap.'</small></b> <a href="'.$_SERVER['PHP_SELF'].'?'.merge_query(array('cache_reload'=>1)).'" class="button">Reload</a></div>';
@set_time_limit(60*5);
ob_end_flush();
$current_time = date('His', time()-(3600*$app['timediff']));
function smaller_than_curr_time($var) {
    global $current_time;
    return ($var <= $current_time);
}
class DuSock {
    var $user_agent = 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1) ';
    function DuSock ($host,$port=80) {
        global $app;
        $this->host = $host;
        $this->port = $port == ''? 80: $port;
        $this->timeout = 30;
        $this->error_cant_open = '';
        $this->http_proxy_enable = $app['http_proxy']['enable'];
        $this->http_proxy_host = $app['http_proxy']['hostname'];
        $this->http_proxy_port = $app['http_proxy']['port'];
        $this->http_proxy_user = $app['http_proxy']['user'];
        $this->http_proxy_pass = $app['http_proxy']['pass'];
        assert($this->host != '');
        $this->iter_302 = array();
        $this->max_iter_302 = 10;
        $this->referer = '';
        $this->cookie = '';
    }
    function socket_open () {
        if ($this->http_proxy_enable) {
            $this->fp = @fsockopen ($this->http_proxy_host,$this->http_proxy_port,$errno,$errstr,$this->timeout);
        }
        else {
            $this->fp = @fsockopen ($this->host,$this->port,$errno,$errstr,$this->timeout);
        }
        if (!$this->fp) {
            if ($errno == 0) {
            }
            else {
                echo 'sock_open: problem trying to connect (hostname notfound, blocked, downed, busy, or timeout)';
            }
            return FALSE;
        }
        else {
            return TRUE;
        }
    }
    function sock_send_request ($location) {
        if ($location == '') $location = '/';
        $http_reqs = array();
        if ($this->http_proxy_enable) {
            $header_auth = '';
            if ($this->http_proxy_user != '') {
                $header_auth = 'Proxy-Authorization: Basic '.base64_encode($this->http_proxy_user.':'.$this->http_proxy_pass);
            }
            $http_reqs[] = 'GET http://'.$this->host.':'.$this->port.$location.' HTTP/1.0';
            $http_reqs[] = 'Host: '.$this->host.':'.$this->port;
            if ($this->referer != '')
                $http_reqs[] = 'Referer: '.$this->referer;
            else
                $http_reqs[] = 'Referer: http://'.$this->host.'/';
            $http_reqs[] = 'User-Agent: '.$this->user_agent;
            if ($header_auth)
                $http_reqs[] = $header_auth;
            $http_reqs[] = 'Connection: close';
            if ($this->cookie != '')
                $http_reqs[] = 'Cookie: '.$this->cookie;
        }
        else {
            $http_reqs[] = 'GET '.$location.' HTTP/1.0';
            $http_reqs[] = 'Host: '.$this->host.':'.$this->port;
            if ($this->referer != '')
                $http_reqs[] = 'Referer: '.$this->referer;
            else
                $http_reqs[] = 'Referer: http://'.$this->host.'/';
            $http_reqs[] = 'User-Agent: '.$this->user_agent;
            $http_reqs[] = 'Connection: close';
            if ($this->cookie != '')
                $http_reqs[] = 'Cookie: '.$this->cookie;
        }
        $http_req = implode("\r\n",$http_reqs)."\r\n\r\n";
        $return = fputs ($this->fp, $http_req);
        if ($return == -1) {
            return FALSE;
        }
        else {
            return TRUE;
        }
    }
    function sock_recv_header () {  //return HTTP response header
        $buffers = '';
        while (!feof ($this->fp)) {
            $buffer = fgets($this->fp, 65536 );
            if ($buffer == "\r\n") break;
            $buffers .= $buffer;
        }
        $temp = explode('\n',$buffers,2);
        list($http, $respcode, $respdesc) = explode(' ',$temp[0]);
        if ($respcode == '302') {  //redirecting
            if (count($this->iter_302) >= $this->max_iter_302)
                die('<p>Max redirection iteration exceeded. Locations:<br>'.implode('<br>',$this->iter_302));
            if (!preg_match('|^Location:\s*(.+)$|im',$buffers,$group))
                assert('Response code 302 but can\'t find location header');
            $new_url = trim($group[1]);
            $this->iter_302[] = $new_url;
            $p = parse_url($new_url);
            $this->host = ($p['host'] == '')? $this->host: $p['host'];
            $this->port = ($p['port'] == '')? (($p['host'] == '')? $this->port: 80): $p['port'];
            if (!$this->socket_open()) die('Cannot contact repository at '.$this->proxy_url);
            $this->sock_send_request($p['path'].(($p['query'] == '')? '': '?'.$p['query']));
            return $this->sock_recv_header();
        }
        elseif ($respcode == '200') {  //redirecting
            $this->iter_302 = array();
        }
        else {
        }
        return $buffers;
    }
    function sock_recv_all () { //receive the rest of the data, then close
        $buffers = '';
        do {    // recv all response body
           $data = fread($this->fp, 8192);
           if (strlen($data) == 0) break;
           $buffers .= $data;
        } while(true);
        $this->close();
        return $buffers;
    }
    function close() {
        fclose($this->fp);
    }
}
function str_time_delta ($date_c,$compressed=FALSE,$localtz=FALSE) {
    global $ctime, $app;
    if ($localtz)
        $delta = $ctime - $date_c + 3600*$app['timediff'];
    else
        $delta = $ctime - $date_c;
    if (date('Hi',$date_c) == '0000') {
        if ($delta < 86400)
            return ($compressed? 'hr':'hari').' ini';
        elseif ($delta < 2*86400)
            return ($compressed? 'kmrn':'kemarin');
        else
            return floor($delta/86400).($compressed? 'hr':' hari').' lalu';
    }
    if ($delta < 60) {  # dibawah 1 menit
        $satuan = $compressed? 'dtk':' detik';
        $tgl = $delta;
    }
    elseif ($delta < 3600) {    # dibawah 1 jam
        $satuan = $compressed? 'mnt':' menit';
        $tgl = floor($delta/60);
    }
    elseif ($delta < 86400) {   # dibawah 1 hari
        $satuan = $compressed? 'j':' jam';
        $tgl = sprintf('%01.1f',$delta/3600);
    }
    else {
        $hari = floor($delta/86400);
        $jam = floor(($delta - $hari*86400) /3600);
        if ($jam == 0) return $hari.($compressed? 'hr':' hari');
        else return $hari.($compressed? 'hr':' hari').' '.$jam.($compressed? 'j':' jam');
    }
    return $tgl.$satuan.' lalu';
}
class DetikUsable {
    var $nodeserver_url = '';
    var $source = '';
    var $already_parsed = False;
    var $proxy_url = '';
    var $newslist_cache_revalidate = 300;
    var $regex_list_prevnews = "|=.nmkanal(.*?)indeks berita(.*)|is";
    var $regex_list_prevnews_all = '|(\d+/\d+/\d+.*?)<.*?<a href="([^"]+url=[^"]+)" class=[^>]*>(.*?<span class="nonhlJudul">.*?)</A>|is';
    var $regex_list_prevnews_subtitle = '|><span class=.nonhlSubJudul.>(.+?)</span>|';
    var $regex_list_prevnews_title = '|nonhlJudul.>(.*)|';
    var $regex_list_headline = '|(<span class="tanggal">.*?)<!-- End of Center(.*)|is';
    var $regex_list_headline_all = '|tanggal.>[^,]*,(.*?) WIB<.*?<A href="([^"]+url=[^"]+)" class=[^>]*>(.*?<span class="summary">.*?</span>)|is';
    var $regex_list_headline_subtitle = '|subjudul.>(.*?)</span|is';
    var $regex_list_headline_title = '|strJudul.>(.+?)</span|is';
    var $regex_list_headline_summary = '|summary.>(.*?)</span|s';
    var $regex_list_topic_all = '|(<h\d>[^<]*?)</h\d>\s*<ul>(.*?)</ul>|si';
    var $regex_list_topic_detail = '|<a href="([^"]+tahun/[^"]+)"[^>]*>.*?"judulhlbawah">(.+?)</span>|is';
    var $regex_list_topic_detail_basic = '|<a href="([^"]+)"[^>]*>.*?"judulhlbawah">(.+?)</span>|is';
    var $regex_list_headline_date = '|/tahun/(\d*)/bulan/(\d*)/tgl/(\d*)/|i';
    var $regex_detail = "|<blockquote>(.*?)<!-- FORM|is";
    function DetikUsable ($url='') {
        global $app;
        $this->SetSourceFast();
        $this->SetUrl($url);
        $this->proxy_url = $app['proxy_url'];
        $this->zlib_support = extension_loaded('zlib');
        $this->enable_cache = $app['cache'];
        $this->unxdt = $_REQUEST['unxdt'];
        $this->url_list = $app['url_list'];
        $this->cache_prefix = '';
        $this->cookie_code = '';
        $this->footer_info = '';
    }
    function GetSourceMode () {
        return $this->source;
    }
    function SetSourceNode ($url='') {
        if ($url != '') $this->url = $url;
        $this->source = 'node';
    }
    function SetSourceCache ($url='') {
        if ($url != '') $this->url = $url;
        $this->source = 'cache';
    }
    function SetSourceOrig ($url='') {
        if ($url != '') $this->url = $url;
        $this->source = 'orig';
    }
    function SetSourceFast ($url='') {
        if ($url != '') $this->url = $url;
        $this->source = 'fast';
    }
    function SetUrl ($url) {
        $this->url = $url;
    }
    function SetNodeServerUrl ($url) {
        $this->nodeserver_url = $url;
    }
    function GetDataMode () {
        return $this->data_mode;
    }
    function SetModeDetail () {
        $this->data_mode = 'detail';
    }
    function SetModeList () {
        $this->data_mode = 'list';
        $this->url = $this->url_list;
    }
    function SetDetailDate ($dt) {
        $this->unxdt = $dt;
    }
    function GetBufferNode ($url) {
        if ($this->data_mode == 'list') $this->proxy_url .= "?url=$url&amp;as_node=1";
        elseif ($this->data_mode == 'detail') $this->proxy_url .= "?x=i&amp;as_node=1";
        else die('Invalid mode');
        if (!$this->zlib_support) $this->proxy_url .= '&amp;uc=1';
        $url_parsed = parse_url($this->proxy_url);
        $sock = new DuSock($url_parsed['host'],$url_parsed['port']!=''? $url_parsed['port'] : 80);
        if (!$sock->socket_open()) die('Cannot contact repository at '.$this->proxy_url);
        $sock->sock_send_request($url_parsed['path'].'?'.$url_parsed['query']);
        $sock->sock_recv_header();
        $buffer = $sock->sock_recv_all();
        if ($buffer=='') { die('getter_node: unable to download node data');}
        $this->buffer = &$buffer;
    }
    function GetBufferCache($force_reload=False,$although_expired=False) {
        if (!$this->enable_cache) return;
        if ($this->GetDataMode() == 'list') $this->url = $this->url_list;
        elseif ($this->GetDataMode() == 'detail' or $this->GetDataMode() == 'an_detail') $although_expired = True;
        $this->from_cache = False;
        $filename = 'cache/'.$this->cache_prefix.md5($this->url);
        if (!file_exists($filename) or $force_reload) {         # check if already in cache
            $this->SetGetBufferOK(False);
            return;
        }
        $buffer = '';
        $fp = fopen($filename,'r');
        while(!feof($fp)) $buffer .= fread($fp,1024);
        fclose($fp);
        $this->news = unserialize($buffer);
        if (!$although_expired and (time() - $this->news['cache']) > $this->newslist_cache_revalidate ) {$this->SetGetBufferOK(False);return;} # check whether cache is expired
        $this->already_parsed = True;
        $this->SetGetBufferOK(True);
        $this->from_cache = True;
    }
    function SaveCache () {
        if (!$this->enable_cache or !$this->news) return;
        if (!file_exists('cache')) mkdir('cache',0755);
        $filename = 'cache/'.$this->cache_prefix.md5($this->url);
        $this->news['cache'] = time();
        $buffer = serialize($this->news);
        unset($this->news['cache']);
        $fp = fopen($filename,'w');
        fwrite($fp,$buffer);
        fclose($fp);
    }
    function GetBufferOrig () {
        if ($this->GetDataMode() == 'list') $this->url = &$this->url_list;
        elseif ($this->GetDataMode() == 'detail')
            assert($this->url != '');
        $url_parsed = parse_url($this->url);
        $sock = new DuSock($url_parsed['host'],$url_parsed['port']);
        if (!$sock->socket_open()) {
            die('Unable to create connection to ['.$sock->host.']:['.$sock->port.']');
        }
        $sock->cookie = $this->cookie_code;
        $sock->sock_send_request($url_parsed['path'].(($url_parsed['query'] == '')?'':'?'.$url_parsed['query']));
        $header_buffer = $sock->sock_recv_header();
        $this->buffer = $sock->sock_recv_all();
        if (preg_match('|Content-Encoding:\s*gzip|i',$header_buffer)) { // if Content-Encoding: gzip, then body is gzipped. Unzipped first.
            $this->buffer = gzinflate(substr($this->buffer, 10,-4));
        }
        $this->ParseAnchor();
        $this->Parse(); $this->SaveCache();
    }
    function IsGetBufferOK () {
        return $this->getbuffer_ok;
    }
    function SetGetBufferOK ($ok=True) {
        assert(is_bool($ok));
        $this->getbuffer_ok = $ok;
    }
    function GetBuffer () {
        $url = $this->url;
        if ($this->GetDataMode() == 'detail') {
            if (strpos($url, 'detikhot.com') !== FALSE) {    # link to detikhot from frontpage.
                $du2 = new AnyNews($url);
                $du2->SetModeAnyNewsList();
                $du2->cache_prefix = 'an_';
                $du2->GetBuffer();
                $success = False;
                foreach ($du2->news['links'] as $link) {
                    if ($link['cleantext'] == '') continue;
                    if (strpos($link['cleantext'], $_REQUEST['param1']) !== FALSE) {
                        $this->url = $link['href'];
                        $success = True;
                        break;
                    }
                }
                if (!$success) {    # try to find the nearest URL
                    $rank = array();
                    foreach ($du2->news['links'] as $link) {
                        if ($link['cleantext'] == '') continue;
                        $score = levenshtein($link['cleantext'], $_REQUEST['param1']);
                        $rank[$score] = $link['href'];
                    }
                    ksort($rank);
                    reset($rank);
                    list($key, $val) = each($rank);
                    $this->url = $val;
                    $success = True;
                }
                if (!$success) {print_r($du2->news['links']); die('Cant find url for title "'.$_REQUEST['param1'].'"');}
                unset($du2);
            }
            elseif (strpos($url, 'detikfinance.com') !== FALSE) {
                $this->cookie_code = $this->GetPageForCookieCode('/indexfr.php?url='.$this->url);
            }
            elseif (strpos($url, 'detikinet.com') !== FALSE or strpos($url, 'detiksport.com') !== FALSE) {    # link to detikhot from frontpage.
                $du2 = new AnyNews($url);
                $du2->SetModeAnyNewsList();
                $du2->cache_prefix = 'an_';
                $du2->GetBuffer();
                $success = False;
                foreach ($du2->news['links'] as $link) {
                    if ($link['cleantext'] == '') continue;
                    if (strpos($link['cleantext'], $_REQUEST['param1']) !== FALSE) {
                        $this->url = $link['href'];
                        $success = True;
                        break;
                    }
                }
                if (!$success) {    # try to find the nearest URL
                    $rank = array();
                    foreach ($du2->news['links'] as $link) {
                        if ($link['cleantext'] == '') continue;
                        $score = levenshtein($link['cleantext'], $_REQUEST['param1']);
                        $rank[$score] = $link['href'];
                    }
                    ksort($rank);
                    reset($rank);
                    list($key, $val) = each($rank);
                    $this->url = $val;
                    $success = True;
                }
                if (!$success) {print_r($du2->news['links']); die('Cant find url for title "'.$_REQUEST['param1'].'"');}
                unset($du2);
            }
        }
        if ($this->GetSourceMode() == 'node')
            return $this->GetBufferNode();
        elseif ($this->GetSourceMode() == 'orig')
            return $this->GetBufferOrig();
        elseif ($this->GetSourceMode() == 'cache')
            return $this->GetBufferCache();
        elseif ($this->GetSourceMode() == 'fast') {
            $this->GetBufferCache();
            if ($this->IsGetBufferOK()) return;
            if ($this->nodeserver_url != '') {
                $this->GetBufferNode();
                if ($this->IsGetBufferOK()) return;
            }
            return $this->GetBufferOrig();
        }
        else {
            die('Unknown source mode:'.$this->GetSourceMode());
        }
    }
    function ParseNode () {
        if ($this->zlib_support) {
            $buffer2 = @gzuncompress($buffer);
            if (!$buffer2 or is_bool($buffer2)) {    //it's probably not gzcompressed
            }
            else {
                $buffer = &$buffer2;
                $stream_compress = TRUE;
            }
        }
        $news = unserialize($buffer);
        if (!$news) {
            die('newslist: from node: Unable to unserialize data');
        }
        if (!is_array($news)) {
            die("newslist: from node: Data was not formatted correctly");
        }
        $this->news = &$news;
        $this->already_parsed = True;
    }
    function ParseList () {
        $this->ParseAds();
        if (preg_match($this->regex_list_prevnews,$this->buffer,$result)) {
            $narrow_buffer = $result[1];
            $remaining_buffer = $result[2];
        }
        else {
            $narrow_buffer = $this->buffer;
        }
        if (preg_match_all($this->regex_list_prevnews_all,$narrow_buffer,$result)) {
            unset($narrow_buffer);
            $total_prev_news = count($result[2]);
            for ($i = 0; $i < $total_prev_news; $i++) {
                $url = $result[2][$i];
                $date = $result[1][$i];
                $title_temp = $result[3][$i];
                $date = preg_replace('/([0-9]*)\/([0-9]*)\//','\\2/\\1/', $date);
                $this->news['prevnews'][$i]['date'] = strtotime($date);
                if (!preg_match('/http:\/\//',$url)) {   //  makeit absolute url
                    $url = 'http://www.detik.com'.$url;
                }
                if (preg_match('/\?url=(.*)/',$url,$url_res)) {  // if link formatted like ...?url=http://.... retrieve the param value instead
                    $url = $url_res[1];
                }
                $this->news['prevnews'][$i]['url'] = $url;
                $this->news['prevnews'][$i]['subtitle'] = '';
                if (preg_match($this->regex_list_prevnews_subtitle,$title_temp,$subtitle_res)) {
                    $this->news['prevnews'][$i]['subtitle'] = $subtitle_res[1];
                }
                if (preg_match($this->regex_list_prevnews_title,$title_temp,$title_res)) {
                    $this->news['prevnews'][$i]['title'] = $title_res[1];
                }
                if (trim($this->news['prevnews'][$i]['title']) == '') $this->news['prevnews'][$i]['title'] = $this->GetAnchorText($this->news['prevnews'][$i]['url']);
            }
        }
        if (preg_match($this->regex_list_headline,$remaining_buffer,$result)) {
            $narrow_buffer = $result[1];
            $remaining_buffer = $result[2];
            assert(preg_match_all($this->regex_list_headline_all,$narrow_buffer,$result));
            unset($narrow_buffer);
            $total_news = count($result[2]);
            for ($i = 0; $i < $total_news; $i++) {
                $date = $result[1][$i];
                $url = $result[2][$i];
                $title = $result[3][$i];
                if (!preg_match('/http:\/\//',$url)) { #makeit absolute url
                    $url = 'http://www.detik.com'.$url;
                }
                if (preg_match('/\?url=(.*)/',$url,$url_res)) { // if link formatted like ...?url=http://.... retrieve the param value instead
                    $url = $url_res[1];
                }
                $this->news['headline'][$i]['url'] = $url;
                $this->news['headline'][$i]['subtitle'] = '';
                if (preg_match($this->regex_list_headline_subtitle,$title,$subtitle_res)) {
                    $this->news['headline'][$i]['subtitle'] = $subtitle_res[1];
                }
                if (preg_match($this->regex_list_headline_title,$title,$title_res)) {
                    $this->news['headline'][$i]['title'] = $title_res[1];
                }
                if (trim($this->news['headline'][$i]['title']) == '') $this->news['headline'][$i]['title'] = $this->GetAnchorText($this->news['headline'][$i]['url']);
                if (preg_match($this->regex_list_headline_summary,$title,$summary_res)) {
                    $this->news['headline'][$i]['summary'] = strip_tags($summary_res[1]);
                }
                $date = preg_replace('|([0-9]*)/([0-9]*)/|','\\2/\\1/', $date);
                $this->news['headline'][$i]['date'] = strtotime($date);
            }
        }
        if (preg_match_all($this->regex_list_topic_all,$remaining_buffer,$result)) {
            $tp_buff = $result;
            $count_topic = count($tp_buff[1]);
            for ($i = 0; $i < $count_topic; $i++) {
                $title = trim(strip_tags($tp_buff[1][$i]));
                if ($title == '') continue;
                $this->news['topic'][$i]['title'] = $title;
                if (!preg_match_all($this->regex_list_topic_detail,$tp_buff[2][$i],$tpdetail_buff)) {
                    if (!preg_match_all($this->regex_list_topic_detail_basic,$tp_buff[2][$i],$tpdetail_buff))
                        continue;
                }
                $titles = $tpdetail_buff[2];
                $urls = $tpdetail_buff[1];
                $dates = $urls;
                $count_news = count($tpdetail_buff[1]);
                for ($j = 0; $j < $count_news; $j++) {
                    $this->news['topic'][$i]['news'][$j]['title'] = $titles[$j];
                    $regex_topic_url = '|\?url=(.*)|';
                    if (!preg_match($regex_topic_url,$urls[$j],$urls_res)) {
                        $regex_topic_url = '|^http://|';
                        if (preg_match($regex_topic_url,$urls[$j],$urls_res)) $this->news['topic'][$i]['news'][$j]['url'] = $urls[$j];
                    }
                    else {
                        $this->news['topic'][$i]['news'][$j]['url'] = $urls_res[1];
                    }
                    if (preg_match($this->regex_list_headline_date,$dates[$j],$tgl)) {
                        $this->news['topic'][$i]['news'][$j]['date'] = mktime(0,0,0,$tgl[2],$tgl[3],$tgl[1]);
                    }
                    if (trim($this->news['topic'][$i]['news'][$j]['title']) == '') $this->news['topic'][$i]['news'][$j]['title'] = $this->GetAnchorText($this->news['topic'][$i]['news'][$j]['title']);
                }
            }
        }
    }
    function ParseDetail () {
        $this->ParseAds();
        if (preg_match($this->regex_detail,$this->buffer,$result)) {
            $narrow_buffer = $result[1];
        }
        else {
            $narrow_buffer = $this->buffer;
        }
        $narrow_buffer = preg_replace('|<script[^>]*?>document.write\(\'(.*?)\'\)</script>|is','\1',$narrow_buffer);
        $narrow_buffer = preg_replace('|<script.*?>.*?</script>|is','',$narrow_buffer);
        $narrow_buffer = str_replace('<font color="#F8EEBE">SMSiklan</font>', '', $narrow_buffer);
        $narrow_buffer = preg_replace('#<font class="judultop5">.*?</font>#is', '', $narrow_buffer);
        if (strpos($this->url,'berita-foto') !== False) { // this channel is different enough, that need specific pregmathicng
            $regex = "|<FONT size=5>(.*?)</font>|is";
            if (preg_match($regex,$narrow_buffer,$res)) $this->news['title'] = $res[1];
            $regex = "|<BR><FONT color=#ff0000 size=2>(.*?)</font>|is";
            if (preg_match($regex,$narrow_buffer,$res)) $this->news['reporter'] = $res[1];
            $regex = '|<P align="Justify">(.*)|is';
            if (preg_match($regex,$narrow_buffer,$res)) $this->news['content'] = $res[1];
            $this->news['content'] = preg_replace('|<a href=(.?)http://www.detik.com/|',"<a href=\\1{$_SERVER['PHP_SELF']}?url=http://www.detik.com/",$this->news['content']);
        }
        elseif (strpos($this->url,'detikhot') !== False) { // this channel is different enough, that need specific pregmathicng
            $regex = "|<font class=.?subjudulberita.?>(.*?)</font>|is";
            if (preg_match($regex,$narrow_buffer,$res)) $this->news['subtitle'] = $res[1];
            $regex = '|<span class="judul">(.*?)</span>.*$|is';
            $this->news['title'] = $_REQUEST['param1'];
            $regex = '|<span class="reporter">(.*?)</span>(.*)<!-- content //-->|is';
            if (preg_match($regex,$narrow_buffer,$res)) $this->news['reporter'] = $res[1];
            $this->news['content'] = $res[2];
            $this->news['reporter'] = strip_tags($this->news['reporter'],'<b></b><i></i>');
            $this->news['content'] = strip_tags($this->news['content'],'<b></b><i></i><a></a><p></p><br>');
        }
        else {
            while (1) {
                $regex = '|<title>(.*?)-\s*(.{6,}?)</title>(.*)$|is';
                if (preg_match($regex,$narrow_buffer,$res)) {$this->news['title'] = $res[2]; $narrow_buffer = $res[3]; break; }
                if ($_REQUEST['param1']) {
                    $this->news['title'] = $_REQUEST['param1'];
                    $regex = '|.*?</title>(.*)$|is';
                    if (preg_match($regex,$narrow_buffer,$res)) { $narrow_buffer = $res[1]; break; }
                }
                $regex = '|<font class=.?judulberita.?>(.{5,}?)</font>.*$|is';
                if (preg_match($regex,$narrow_buffer,$res)) {$this->news['title'] = $res[1]; break; }
                $regex = '|\.(\S+?)\s*\{[^\}]*?bold 22px[^\}]*?\}|is';
                if (preg_match_all($regex,$narrow_buffer,$groups,PREG_SET_ORDER)) {
                    foreach ($groups as $group) {
                        $regex = '#<font class=("|\')?'.preg_quote($group[1],'#').'\1?.*?>(.{5,}?)</font>#is';
                        if (preg_match($regex,$narrow_buffer,$res)) {$this->news['title'] = $res[2]; break 2; }
                    }
                }
                $this->news['title'] = '';
                break;
            }
            while (1) {
                $regex = '|<font class=.?subjudulberita.?>(.{10,}?)</font>(.*)|is';
                if (preg_match($regex,$narrow_buffer,$res)) {$this->news['reporter'] = $res[1]; break; }
                if ($this->news['title']) {
                    $regex = '|'.preg_quote($this->news['title'],'|').'.*?<font.*?>(.{10,}?)</font>(.*)|is';
                    if (preg_match($regex,$narrow_buffer,$res)) {$this->news['reporter'] = $res[1]; $narrow_buffer = $res[2]; break; }
                }
                $this->news['reporter'] = '';
                break;
            }
            $minchar = 1000;
            while (1) {
                $regex = '#prs-relion\.swf.*?>(.{'.$minchar.',}?)</blockquote>#is';
                if (preg_match($regex,$narrow_buffer,$res)) { $this->news['content'] = $res[1]; break; }
                $regex = '/<font class=.?textberita.?>(.{'.$minchar.',}?)(?:<\/font>|$)/is';
                if (preg_match($regex,$narrow_buffer,$res)) { $this->news['content'] = $res[1]; break; }
                $regex = '/(.{'.$minchar.',}?)(?:<\/font>|$)/is';
                if (preg_match($regex,$narrow_buffer,$res)) { $this->news['content'] = $res[1]; break; }
                $regex = '/(.{'.$minchar.',}?)(?:<div id="smsblok">|$)/is';
                if (preg_match($regex,$narrow_buffer,$res)) { $this->news['content'] = $res[1]; break; }
                $regex = '#(.{'.$minchar.',}?\([a-zA-Z]{3}\))#is';
                if (preg_match($regex,$narrow_buffer,$res)) { $this->news['content'] = $res[1]; break; }
                $regex = '#(.{'.$minchar.',}?<([^>]+)>\([a-zA-Z]{3}\)</\2>)#is';
                if (preg_match($regex,$narrow_buffer,$res)) { $this->news['content'] = $res[1]; break; }
                $this->news['content'] = nl2br(trim(strip_tags($narrow_buffer)));
                break;
            }
            $this->news['reporter'] = strip_tags($this->news['reporter'],'<b></b><i></i>');
            $this->news['content'] = strip_tags($this->news['content'],'<b></b><i></i><a></a><p></p><br>');
            $url_parsed = parse_url($this->url);
            $prefix_url = $_SERVER['PHP_SELF'].'?url=http://'.$url_parsed['host'].':'.$url_parsed['port'].'/';
            $this->news['content'] = preg_replace('#<a href=("|\')(index\.php[^\1]*?)\1(.*?)>#is', '<a href=\1'.$prefix_url.'\2\1\3>', $this->news['content']);
        }
        $this->news['url'] = $this->url;
        $this->news['date'] = $this->unxdt;
    }
    function Parse () {
        if ($this->already_parsed) return;
        if ($this->GetSourceMode() == 'node')
            $this->ParseNode();
        elseif ($this->GetDataMode() == 'list')
            $this->ParseList();
        elseif ($this->GetDataMode() == 'an_list')
            $this->ParseAnyNewsList();
        elseif ($this->GetDataMode() == 'detail')
            $this->ParseDetail();
        elseif ($this->GetDataMode() == 'an_detail')
            $this->ParseAnyNewsDetail();
        else
            die('Unknown parsing state');
        $this->already_parsed = True;
    }
    function ParseAds () {
        global $app;
        if (!$app['ads']) return;
        $regex_ads = '|<a([^>]*)>(.*?)</a>|is';
        if (!preg_match_all($regex_ads,$this->buffer,$ads_res,PREG_SET_ORDER)) {   // get all ad links
            return;
        }
        $this->news['ads'] = array();
        for ($i = 0; $i < count($ads_res); $i++) {
            preg_match('|href="([^"]*)"|is',$ads_res[$i][1],$url_res);
            if (!preg_match('|http://ad\.detik\.com/link|is',$url_res[1])) continue;
            unset($temp);
            $temp['url'] = $url_res[1];
            $name = trim(strip_tags($ads_res[$i][2]));
            if ($name == '') {
                preg_match('|/[^\-]*-([^/]*)\.ad|i',$ads_res[$i][1],$adsname_res);
                $name = $adsname_res[1];
            }
            $temp['name'] = $name;
            $this->news['ads'][] = $temp;
        }
    }
    function Render () {
        if ($this->GetDataMode() == 'detail') {
            return $this->RenderDetailNormal();
        }
        elseif ($this->GetDataMode() == 'list') {
            if ($this->GetSourceMode() == 'node')
                return $this->RenderNode();
            $target = $_REQUEST['no'] == 'frame'? '': 'm';
            return $this->RenderListNormal($target);
        }
        elseif ($this->GetDataMode() == 'an_list')
            return $this->RenderAnyNewsList();
        elseif ($this->GetDataMode() == 'an_detail')
            return $this->RenderAnyNewsDetail();
    }
    function RenderDetailNormal ($complete=True,$with_header=True,$strip_ads=False) {
        global $list_header_output,$url,$app;
        $content = preg_replace('|<B>(.*?)<P>|is','<span style=font-size:larger><B>\\1</span><P>',$this->news['content']);
        $content = preg_replace('|<a href=("?)http://www.detik.com|is',"<a href=\\1{$_SERVER['PHP_SELF']}?url=http://www.detik.com",$content);
        if ($with_header) echo $list_header_output;
        if ($complete) {
            if ($this->news['date'] != '')
                echo '<small>'.date('Y-m-d H:i:s',$this->news['date']).'</small>';
            echo '<h3>'.$this->news['subtitle'].' '.$this->news['title'].'</h3>';
            echo '<p class="u">'.$this->news['reporter'].'</p>';
            if (!$strip_ads) $this->RenderAds();
            echo '<span class="u">'.$content.'</span>';
        }
        else {
            echo '<span class=u>'.$content.'</span>';
        }
        if ($this->from_cache) echo '<p><small><span style="color:#666">(news from cache)</span> - <a href="'.$_SERVER['PHP_SELF'].'?unxdt='.$_REQUEST['unxdt'].'&amp;url='.$this->news['url'].'&cache_reload=1&param1='.urlencode($_REQUEST['param1']).'">Reload from Original</a></small>';
        echo '<p><small><a href="'.$this->news['url'].'" style="color:#666">'.$this->news['url'].'</a></small></p>';
        if ($this->footer_info != '')
            echo '<small>'.$this->footer_info.'</small>';
    }
    function RenderNode ($uncompressed=0) {
        set_magic_quotes_runtime(0);
        $news_serial = serialize($this->news);
        if (!$this->zlib_support or $uncompressed) echo $news_serial;
        else echo gzcompress($news_serial);
    }
    function RenderDetailRss () {
        return $this->RenderDetailNormal(True,False,True);
    }
    function CaptureStart () {
        ob_end_clean();
        ob_start();
    }
    function CaptureEnd () {
        $ret = ob_get_contents();
        ob_end_clean();
        return $ret;
    }
    function RenderDetailWap () {
        header('Content-Type: text/vnd.wap.wml');
        $content = preg_replace('|<B>(.*?)<P>|is','<span style=font-size:larger><B>\\1</span><P>',$this->news['content']);
        $content = preg_replace('|<a href=("?)http://www.detik.com|is',"<a href=\\1{$_SERVER['PHP_SELF']}?url=http://www.detik.com",$content);
        echo '<?xml version="1.0"?><!DOCTYPE wml PUBLIC "-//WAPFORUM//DTD WML 1.1//EN" "http://www.wapforum.org/DTD/wml_1.1.xml"><wml><head></head><card id="main" title="'.htmlentities(strip_tags($this->news['subtitle'].' '.$this->news['title'])).'">';
        echo '<p>'.htmlentities(strip_tags($this->news['content'])).'</p>';
        echo '</card></wml>';
    }
    function RenderListRssComplete () {
        return $this->RenderListRss(True);
    }
    function RenderListRss ($with_content = False) {
        global $list_header_output,$list_top_output2,$app,$author_name,$author_email;
        header('Content-Type: text/xml');
        echo '<?xml version="1.0"?><rss version="2.0"><channel><title>Detik.Usable: berita cepat</title><link>'.($_SERVER['HTTPS'] == "on"? 'https': 'http').'://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'</link><description>'.htmlentities($app['version']).'</description><language>id</language><category>news</category><managingEditor>'.$author_email.'</managingEditor><webMaster>'.$author_email.'</webMaster><lastBuildDate>'.date('r').'</lastBuildDate><generator>'.$app['name'].' v'.$app['version'].'</generator>';
        foreach ($this->news['headline'] as $headline) {  // view headlines
            $url = ($_SERVER['HTTPS'] == "on"? 'https': 'http').'://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'?url='.urlencode($headline['url']);
            if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
            if ($with_content) {
                $du = new DetikUsable($headline['url']); $du->SetModeDetail(); $du->SetDetailDate($headline['date']); $du->GetBuffer(); $du->Parse(); $du->CaptureStart(); $du->RenderDetailRss();
                $description = htmlentities($du->CaptureEnd());
            }
            else $description = htmlentities($headline['summary']);
            echo '<item><title>'.htmlentities(strip_tags($headline['subtitle'].$headline['title'])).'</title><link>'.$url.'</link><description>'.$description.'</description><guid>'.$headline['url'].'</guid><pubDate>'.date('r',$headline['date']).'</pubDate><category>Headlines</category></item>';
        }
        foreach ($this->news['prevnews'] as $headline) {  //  view prevnews
            $url = ($_SERVER['HTTPS'] == "on"? 'https': 'http').'://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'?url='.urlencode($headline['url']);
            if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
            if ($with_content) {
                $du = new DetikUsable($headline['url']); $du->SetModeDetail(); $du->SetDetailDate($headline['date']); $du->GetBuffer(); $du->Parse(); $du->CaptureStart(); $du->RenderDetailRss();
                $description = htmlentities($du->CaptureEnd());
            }
            else $description = '';
            echo '<item><title>'.htmlentities(strip_tags($headline['subtitle'].$headline['title'])).'</title><link>'.$url.'</link><description>'.$description.'</description><guid>'.$headline['url'].'</guid><pubDate>'.date ('r',$headline['date']).'</pubDate><category>Previous News</category></item>';
        }
        foreach ($this->news['topic'] as $topic) {    //  view topic news
            foreach ($topic['news'] as $headline) {
                $url = ($_SERVER['HTTPS'] == "on"? 'https': 'http').'://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'?url='.urlencode($headline['url']);
                if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
                if ($with_content) {
                    $du = new DetikUsable($headline['url']); $du->SetModeDetail(); $du->SetDetailDate($headline['date']); $du->GetBuffer(); $du->Parse(); $du->CaptureStart(); $du->RenderDetailRss();
                    $description = htmlentities($du->CaptureEnd());
                }
                else $description = '';
                echo '<item><title>'.htmlentities(strip_tags($headline['subtitle'].$headline['title'])).'</title><link>'.$url.'</link><description>'.$description.'</description><guid>'.$headline['url'].'</guid><pubDate>'.date('r',$headline['date']).'</pubDate><category>'.$topic['title'].'</category></item>';
            }
        }
        echo '</channel></rss>';
        return $list;
    }
    function RenderListWap () {
        header('Content-Type: text/vnd.wap.wml');
        echo '<?xml version="1.0"?><wml><head></head><card id="main" title="detik.usable">';
        foreach ($this->news['headline'] as $headline) {  // view headlines
            $url = ($_SERVER['HTTPS'] == "on"? 'https': 'http').'://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'?wap=1&amp;url='.urlencode($headline['url']);
            if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
            $description = htmlentities($headline['summary']);
            $date_delta = str_time_delta($headline['date'],TRUE);
            echo '<p><anchor>'.$date_delta.': '.htmlentities(strip_tags($headline['subtitle'].$headline['title'])).'<go href="'.$url.'"></go></anchor></p>';
        }
        foreach ($this->news['prevnews'] as $headline) {  //  view prevnews
            $url = ($_SERVER['HTTPS'] == "on"? 'https': 'http').'://'.$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF'].'?wap=1&amp;url='.urlencode($headline['url']);
            if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
            echo '<p><anchor>'.htmlentities(strip_tags($headline['subtitle'].$headline['title'])).'<go href="'.$url.'"></go></anchor></p>';
        }
        echo '</card></wml>';
    }
    function RenderListNormal ($frame_target='m') {
        global $author_email;
        if ($this->news['cache']) {
            echo '<center><span style="font-size:x-small;font-weight:bold;color:c00;">list dari cache '.str_time_delta($this->news['cache'],FALSE,TRUE);
            if ((time() - $this->news['cache'])>$this->newslist_cache_revalidate) {
                if ($_REQUEST['pda']) echo '(press reload button for realtime update)</span></center>';
                else echo '. Auto-loading berita baru di background.</span></center>';
            }
            else echo '</span></center>';
        }
        $this->RenderAds();
        if ($this->news['headline']) {
            foreach ($this->news['headline'] as $headline) {  // view headlines
                $headline['url'] = $_SERVER['PHP_SELF'].'?unxdt='.urlencode($headline['date']).'&amp;url='.urlencode($headline['url']);
                if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
                $date = date('H:i',$headline['date']);
                $date_delta = str_time_delta($headline['date']);
                $alt = 3;
                echo '<p><span class="j"><a href="'.$headline['url'].'" target="'.$frame_target.'">'.strip_tags($headline['subtitle'].$headline['title']).'</a></span>';
                echo '<br><span class="u">'.$headline['summary'].'</span>';
                echo '<b><small><span class="d">--'.$date.', '.$date_delta.'</span></small></b></p>';
            }
        }
        else {
            echo '<p><small>Sorry, top headline news are not available. If this persists, <a href="mailto:'.$author_email.'">contact author</a>.</small></p>';
        }
        echo '<p></p><table border="0" cellspacing="0" cellpadding="0" summary="">';
        if ($this->news['prevnews']) {
            foreach ($this->news['prevnews'] as $headline) {  //  view prevnews
                $headline['url_orig'] = $headline['url'];
                $headline['url'] = $_SERVER['PHP_SELF'].'?unxdt='.urlencode($headline['date']).'&amp;url='.urlencode($headline['url']);
                if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
                $date = date('H:i',$headline['date']);
                $title_string = strip_tags($headline['subtitle'].$headline['title']);
                echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$headline['url'].'" target="'.$frame_target.'">'.$title_string.'</a></span><small><b><span class="d">--'.$date.'</span></b></small></td></tr>';
            }
        }
        else {
            echo '<p><small>Sorry, previous headline news are not available. If this persists, <a href="mailto:'.$author_email.'">contact author</a>.</small></p>';
        }
        echo '</table>';
        if ($this->news['topic']) {
            foreach ($this->news['topic'] as $topic) {    //  view topic news
                echo '<p style="margin-bottom:0;"><span class="i">'.$topic['title'].'</span></p>';
                if ($topic['news']) {
                    echo '<table border="0" cellspacing="0" cellpadding="0" summary="">';
                    foreach ($topic['news'] as $headline) {
                        $headline['url'] = $_SERVER['PHP_SELF'].'?unxdt='.urlencode($headline['date']).'&url='.urlencode($headline['url']).'&param1='.urlencode(strip_tags($headline['title']));
                        if ($headline['subtitle'] != '') $headline['subtitle'] .= ' - ';
                        echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$headline['url'].'" target="'.$frame_target.'">'.$headline['subtitle'].$headline['title'].'</a></span></td></tr>';
                    }
                    echo '</table>';
                }
                else {
                    echo '<p><small>Sorry, this part of news are not available. If this persists, <a href="mailto:'.$author_email.'">contact author</a>.</small></p>';
                }
            }
        }
        else {
            echo '<p><small>Sorry, topical news are not available. If this persists, <a href="mailto:'.$author_email.'">contact author</a>.</small></p>';
        }
        echo '<p align="center"><a href="'.$_SERVER['PHP_SELF'].'?x=w" target="m">Home &gt;</a></p>';
    }
    function RenderAds () {
        global $app;
        if ($app['ads'] and $this->news['ads'] != '') {
            echo '<table align=right bgcolor=#B4D0DC border=0 cellspacing=0 width=100><tr><td><table border=0 cellpadding=3 cellspacing=0 width=100%><tr><td bgcolor=#ECF8FF>';
            echo '<p class=u><span class=i>Iklan</span>';
            foreach ($this->news['ads'] as $ads) {
                $url = $ads['url'];
                $desc = $ads['name'];
                if (strlen($desc)>10) $desc = substr($desc,0,10).'&gt;';
                if ($desc == '') $desc = 'Iklan';
                echo "<br><a href=\"$url\" target=m>$desc</a>";
            }
            echo '</td></tr></table></td></tr></table>';
        }
    }
    function ParseAnchor () {
        if ($this->GetSourceMode() != 'orig') return False;
        $this->anchors = array();
        $source_url = parse_url($this->url);
        $regex = "/<a\s+href=[\"']?([^\" >]*).*?>(.*?)<\/a>(.*?)(?=<a|$)/is";
        if (preg_match_all($regex,$this->buffer,$groups,PREG_SET_ORDER)) {
            foreach ($groups as $group) {
                $href = $group[1];
                if (!stristr($href,'http://')) {
                    if (substr($href,0,1) != '/') $href = $fixpathnonslash.$href;
                    else $href = 'http://'.$source_url['host'].':'.$source_url['port'].$href;
                }
                $this->anchors[] = array('href'=>$href, 'text'=>$group[2], 'data'=>$group[3]);
            }
        }
        return True;
    }
    function GetAnchorText ($url) {
        if (!$this->anchors) return '&lt;anchor has not been searched&gt;';
        foreach ($this->anchors as $a) {
            if (strstr($a['href'], $url) and trim(strip_tags($a['text'])) != '')  { # find in anchors
                return $a['text'];
            }
        }
        return '&lt;unknown title&gt;';
    }
    function GetPageForCookieCode ($url) {
        $url_parsed = parse_url($this->url);
        $sock = new DuSock($url_parsed['host'],$url_parsed['port']);
        if (!$sock->socket_open()) {
            die('Unable to create connection to ['.$sock->host.']:['.$sock->port.']');
        }
        $sock->sock_send_request($url);
        $header_buffer = $sock->sock_recv_header();
        if (!preg_match_all('|^set-cookie:\s*(.+?);|im',$header_buffer,$result)) {
            $this->footer_info = 'ncn';
            return '';
        }
        return implode(';',$result[1]);
    }
}
function nopadding_time_parser ($time) {
    if (strlen($time) == 6) {   # complete. always correct.
        return sscanf($time,"%02d%02d%02d");
    }
    elseif (strlen($time) == 5) {
        $correct = array();
        list($hour,$minute,$second) = sscanf($time,"%02d%02d%01d");
        if ($hour < 24 and $minute < 60 and $second < 60) $correct[] = sprintf('%02d%02d%02d',$hour,$minute,$second);
        list($hour,$minute,$second) = sscanf($time,"%02d%01d%02d");
        if ($hour < 24 and $minute < 60 and $second < 60) $correct[] = sprintf('%02d%02d%02d',$hour,$minute,$second);
        list($hour,$minute,$second) = sscanf($time,"%01d%02d%02d");
        if ($hour < 24 and $minute < 60 and $second < 60) $correct[] = sprintf('%02d%02d%02d',$hour,$minute,$second);
        if (count($correct) == 0) return array(0,0,0);
        if (count($correct) > 1) {
            sort($correct,SORT_STRING);
            $test1 = array_filter($correct, 'smaller_than_curr_time');
            if (count($test1)) $correct = $test1;
        }
        return sscanf(array_pop($correct),"%02d%02d%02d");
    }
    elseif (strlen($time) == 4) {
        $correct = array();
        list($hour,$minute,$second) = sscanf($time,"%01d%01d%02d");
        if ($hour < 24 and $minute < 60 and $second < 60) $correct[] = sprintf('%02d%02d%02d',$hour,$minute,$second);
        list($hour,$minute,$second) = sscanf($time,"%01d%02d%01d");
        if ($hour < 24 and $minute < 60 and $second < 60) $correct[] = sprintf('%02d%02d%02d',$hour,$minute,$second);
        list($hour,$minute,$second) = sscanf($time,"%02d%01d%01d");
        if ($hour < 24 and $minute < 60 and $second < 60) $correct[] = sprintf('%02d%02d%02d',$hour,$minute,$second);
        if (count($correct) == 0) return array(0,0,0);
        if (count($correct) > 1) {
            sort($correct,SORT_STRING);
            $test1 = array_filter($correct, 'smaller_than_curr_time');
            if (count($test1)) $correct = $test1;
        }
        return sscanf(array_pop($correct),"%02d%02d%02d");
    }
    elseif (strlen($time) == 3) { # always correct
        return sscanf($time,"%d%d%d");
    }
    else {
        return array(0,0,0);
    }
}
class AnyNews extends DetikUsable {
    function AnyNews ($url='') {
        parent::DetikUsable($url);
    }
    function SetModeAnyNewsList () {
        $this->data_mode = 'an_list';
        if ($this->url == '')
            $this->url = $this->url_list;
    }
    function SetModeAnyNewsDetail () {
        $this->data_mode = 'an_detail';
        $this->url = $this->url_list;
    }
    function ParseAnyNewsList() {
        $logic_url = ($this->url_real != '')?$this->url_real: $this->url;
        $up = parse_url($logic_url);
        $hostname = $up['host'];
        if ($up['port'] != '') $hostname .= ':'.$up['port'];
        $scheme = $up['scheme'];
        $fixpathnonslash = $scheme.'://'.$hostname.substr($up['path'],0,strrpos($up['path'],'/')).'/';
        $links = array();
        $temp_deduper = array();
        $regex = "<a.*?href=[\"']?([^\" >]*).*?>(.*?)</a>";
        if (preg_match_all('|'.$regex.'|is',$this->buffer,$groups,PREG_SET_ORDER)) {
            foreach ($groups as $group) {
                $href = $group[1];
                if (substr($href,0,7) != 'http://') {
                    if (substr($href,0,2) == './') $href = substr($href,2);
                    if (substr($href,0,2) == '//')  # see slashdot.org. // => currentscheme://
                        $href = $scheme.':'.$href;
                    elseif (substr($href,0,1) != '/')
                        $href = $fixpathnonslash.$href;
                    else    //href begin with '/', absolutize with hostname
                        $href = $scheme.'://'.$hostname.$href;
                }
                $href = str_replace('&amp;','&',$href);
                if ($temp_deduper[$href] != '') { //remove duplicate links
                    if (strlen($links[$temp_deduper[$href]]['text']) < strlen($group[2]))
                        $links[$temp_deduper[$href]]['text'] = $group[2];
                    if (strlen($links[$temp_deduper[$href]]['cleantext']) < strlen(trim(strip_tags($group[2]))))
                        $links[$temp_deduper[$href]]['cleantext'] = trim(strip_tags($group[2]));
                }
                else {
                    $links[] = array('href'=> $href, 'text' => $group[2], 'cleantext' => trim(strip_tags($group[2])) );
                    $temp_deduper[$href] = count($links)-1;
                }
            }
        }
        unset($temp_deduper);
        $regex = "<frame .*?src=[\"']?([^\" >]*).*?>";
        if (preg_match_all('|'.$regex.'|is',$this->buffer,$groups,PREG_SET_ORDER)) {
            foreach ($groups as $group) {
                $href = $group[1];
                if (!stristr($href,'http://')) {
                    if (substr($href,0,1) != '/')
                        $href = $fixpathnonslash.$href;
                    else    //href begin with '/', absolutize with hostname
                        $href = 'http://'.$hostname.$href;
                }
                $links[] = array('href'=> $href, 'text' => 'frameset', 'cleantext' => "<b>Frame [{$group[1]}]</b>" );
            }
        }
        $channels = array();
        $channel = 'Frameset';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if ($link['text'] == 'frameset') {
                $link['channel'] = $channel;
                $link['list'] = 1;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.kompas.co[^\/]+/([^/]*)/news/(\d\d)(\d\d)/(.*?)/(\d\d)(\d\d)(\d\d)';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$channel,$year,$month,$day,$hour,$minute,$second) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
                $link['href'] = str_replace('_.htm', '.htm', $link['href']);
            }
            $links[$i] = $link;
        }
        $regex = 'www.kompas.co[^\/]+/kompas-cetak/(\d\d)(\d\d)/(.*?)/';
        $channel = 'Kompas Cetak';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$year,$month,$day) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = '//[^\.]+\.(.*?)\.com/.*?tahun/(.+?)/.*?/(.+?)/.*?/(.+?)/.*?/(.+?)/';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$channel,$year,$month,$day,$time) = $group;
                list($hour,$minute,$second) = nopadding_time_parser($time);
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $regex_summary = $link['text'].'(.*?)<span class="summary">(.*?)</span>';
                if (preg_match("|$regex_summary|is",$this->buffer,$minigroup)) {
                    if (strlen($minigroup[1]) < 300) {    # summary should be "close" to link
                        $link['summary'] = $minigroup[2];
                        $channel = 'Headline';
                        $link['channel'] = $channel;
                    }
                }
                if (preg_match('|url=(.*)|',$link['href'],$group)) $link['href'] = $group[1];
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.detik.com/berita-foto/.*?/(\d\d\d\d)(\d\d)(\d\d)-(\d\d)(\d\d)(\d\d).shtml';
        $channel = 'Berita Foto';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$year,$month,$day,$hour,$minute,$second) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $regex_summary = $link['text'].'.*?<span class="summary">(.*?)</span>';
                if (preg_match("|$regex_summary|is",$this->buffer,$minigroup)) {
                    $link['summary'] = $minigroup[1];
                }
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www\.thejakartapost\.com/detaillatestnews\.asp\?fileid=(\d\d\d\d)(\d\d)(\d\d)(\d\d)(\d\d)(\d\d)';
        $channel = 'Latest News';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$year,$month,$day,$hour,$minute,$second) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www\.thejakartapost\.com/detailheadlines\.asp\?fileid=(\d\d\d\d)(\d\d)(\d\d)';
        $channel = 'Headlines';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$year,$month,$day) = $group;
                list($hour,$minute,$second) = array(0,0,0);
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www\.antara\.co\.id/berita\.asp';
        $channel = 'Berita';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $link['cleantext'] = ucwords(strtolower($link['cleantext']));
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $channel = 'Online';
        $regex = 'online_detail.asp';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $channel = 'Koran Cetak';
        $regex = 'koran_detail.asp';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $channel = 'Koran Cetak';
        $regex = 'www.republika.co.id/cetak_detail.asp';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $channel = 'Supplemen Cetak';
        $regex = 'www.republika.co.id/suplemen/cetak_detail.asp';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $channel = 'Supplemen';
        $regex = 'www.republika.co.id/suplemen/indeks_suplemen.asp';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
                $link['list'] = 1;
            }
            $links[$i] = $link;
        }
        $channel = 'Supplemen';
        $regex = 'www.republika.co.id/indeks_suplemen.asp';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
                $link['list'] = 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.korantempo.com/news/(\d\d\d\d)/(\d*)/(\d*)';
        $channel = 'Headline';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$year,$month,$day) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.tempo[^.]+.com/hg/(.*?)/(\d\d\d\d)/(\d*)/(\d*)';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$channel,$year,$month,$day) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.suarapembaruan.com/News/(\d\d\d\d)/(\d*)/(\d*)/([^/]*)/';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$year,$month,$day,$channel) = $group;
                $link['channel'] = $channel;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.mediaindo.co.id/beritakhusus.asp';
        $channel = 'Berita Khusus';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.mediaindo.co.id/berita.asp';
        $channel = 'Berita';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.pikiran-rakyat.com/([^/]+)/(\d+)/(\d\d)\d\d/(\d\d)/(\d\d)(.)';
        $cl = array('01'=>'Berita Utama', '02'=>'Tajuk Rencana','03'=>'Bandung Raya', '04'=>'Jawa Barat', '05'=>'Dalam Negri', '06'=>'Ekonomi', '07'=>'Olah Raga', '08'=>'Artikel', '09'=>'Ada Siapa', '10'=>'Surat Pembaca');
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$dummy, $year,$month,$day,$cid,$mark) = $group;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $channel = $cl[$cid];
                if ($channel == '') $channel = 'Lain-lain';
                $link['channel'] = $channel;
                if ($mark == '.') $link['list'] = 1;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.bbc.co.uk/indonesian/([^/]+)/story/(\d+)/(\d\d)/\d\d\d\d(\d\d)';
        $channel = 'Berita Dunia';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$channel,$year,$month,$day) = $group;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.suaramerdeka.com/.*?/(\d\d)(\d\d)/(\d\d)/';
        $channel = 'Nasional';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($year,$month,$day,$hour,$minute,$second) = array(0,0,0,0,0,0);
                list($dummy,$year,$month,$day) = $group;
                $link['unixtime'] = mktime($hour,$minute,$second,$month,$day,$year);
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.jawapos.com/index.php\?act=([^\&]+)\&';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$channel) = $group;
                $link['channel'] = $channel;
                $channels[$channel] += 1;
                if (stristr($link['href'],'detail') === FALSE) $link['list'] = 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.abc.net.au/ra/indon/news/stories/';
        $channel = 'Berita Terbaru';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.wartaekonomi.com/detail.asp\?aid';
        $channel = 'Berita';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.gatra.com/artikel.php';
        $channel = 'Artikel';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.gatra.com/rubrik.php';
        $channel = 'Rubrik';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $link['list'] = 1;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.swa.co.id/.*?/([^/]+)/.*?/details.php';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$channel) = $group;
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.infokomputer.com/aktual/aktual.php';
        $channel = 'Aktual';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.poskota.co.id/poskota/.*?.asp\?id=';
        $channel = 'Headlines';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'articles.ibonweb.com/webarticle.asp';
        $channel = 'Articles';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $regex = 'www.beritaiptek.com/messages/([^/]+)/';
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if (preg_match('|'.$regex.'|is',$link['href'],$group)) {
                list($dummy,$channel) = $group;
                $link['channel'] = $channel;
                $channels[$channel] += 1;
            }
            $links[$i] = $link;
        }
        $this->news['channels'] = $channels;
        $this->news['links'] = $links;
    }
    function ParseAnyNewsDetail() {
        while (1) {
            $regex = '<span class="sectionHL">(.*?)<.*?<p><b>(.*?)<.*?<!---Start--->(.*?)<!--';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex = 'size="4">(.*?)</font.*?<font color="#000000" face="Arial" size="2">(.*?)</font.*?<!---Start--->(.*?)&nbsp;&nbsp;&nbsp;&nbsp;';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex = '<!-- Put the news record in here -->(.*?)</font>.*?<font face="Arial, Helvetica" size="2">(.*?)<hr noshade';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<p><font face="Helvetica, Arial" size=3>(.*?)</font>.*?<font face="Arial, Helvetica" size="2">(.*?)</font>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<span class="clsfont3">(.*?)</span>.*?<span class="clsfont1">(.*?)<p align=right>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<BR><FONT size=5>(.*?)</font>.*?<FONT color=#ff0000 size=2>(.*?)</font>.*?P align="Justify">(.*?)<!-- FORM BERITA ';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex = '<font class="subjudulberita">(.*?)</font>.*?<font class="judulberita">(.*?)</font>.*?<font class="textreporter">(.*?)</font>.*?<font class="textberita">(.*?)</blockquote>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$subtitle,$title,$reporter,$body) = $group; break;
            }
            $regex = '<font class="judulberita">(.*?)</font>.*?<font class="textreporter">(.*?)</font>.*?<font class="textberita">(.*?)\n</font>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex ='<font class="headline">(.*?)</font>.*?<font class="copy">(.*?)</font>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<font class="judul">(.*?)</font>.*?<font class="navigasi">(.*?)</font>.*?<font class="deskripsi">(.*?)</font>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex = '<font class="judul">(.*?)</font>.*?<font class="deskripsi">(.*?)</font>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<meta name="title" content="([^"]*?)".*?<font color=#666666>(.*?)</font></p> ';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<H1>(.*?)</H1>.*?<P>(.*)<HR>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<div class=JudulBerita>(.*?)</div>.*?<p class=BeritaBaca>(.*?)<div>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<span class=JudulRubrik>(.*?)</span>.*?<span class=JudulBerita>(.*?)</span>.*<tr><td>\s+<p>(.*?)<div class=PrintMail>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$subtitle,$title,$body) = $group; break;
            }
            $regex = '<!-- st_title -->(.*?)<!-- end_title -->.*?<!-- st_story -->(.*?)<div class="six">';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<font size="5">(.*?)</font>.*?</font><p>(.*?)</font></td>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<div id="AktualJudul">(.*?)</div>.*?<div id="AktualIsi">(.*?)</div>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<div class="pad20">.*?<br><b>(.*?)</b>.*?<br><br>(.*?)<br><br>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<font size="4" face="Times New Roman, Times, serif">(.*?)</font>.*?<font face="Arial" size="2">(.*?)<br></font><br>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<font face="Arial" size="3"><b>(.*?)</b>.*?<div align= "justify">(.*?)<td width="100%" align=center>&nbsp;<p>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<span class=judul>(.*?)</span>.*?<br><br>(.*?)<br><br>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<span class="texttitle03">(.*?)</span>.*?<span class="copy03">(.*?)</span>(.*?)</DIV><BR><BR>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex = '<font size="5">(.*?)</font>.*?<font size="2" color="Blue">(.*?)</font>.*?</font><br><br>(.*?)</font><br><br>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$reporter,$body) = $group; break;
            }
            $regex = '<td class="title1">(.*?)</td>.*?<td class="content_biru">(.*?)</td>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<p class="title">(.*?)</p>.*?<p class="body">(.*?)<p>&nbsp;</p>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            $regex = '<!--top: 95-->(.*?)<font size=2>.*?<font size=2>(.*?)</td></tr>';
            if (preg_match('|'.$regex.'|is',$this->buffer,$group)) {
                list($dummy,$title,$body) = $group; break;
            }
            echo '<p><b>News content unparseable</b></p>';
            echo '<p>Redirecting to original news, or click <a href="'.$this->url.'">Original News</a>.</p>';
            echo '<script>window.location="'.$this->url.'"</script>';
            return False;
        }
        $this->news['subtitle'] = $subtitle;
        $this->news['title'] = $title;
        $this->news['reporter'] = $reporter;
        $this->news['content'] = $body;
        $this->news['date'] = $_REQUEST['unxdt'];
        $this->news['url'] = $this->url;
        return True;
    }
    function RenderAnyNewsList($frame_target = 'm') {
        global $author_email;
        $channels = $this->news['channels'];
        $links = $this->news['links'];
        if ($this->news['cache']) {
            echo '<center><span style="font-size:x-small;font-weight:bold;color:c00;">list dari cache '.str_time_delta($this->news['cache'],FALSE,TRUE);
            if ((time() - $this->news['cache'])>$this->newslist_cache_revalidate) {
                if ($_REQUEST['pda']) echo ' (press reload button for realtime update)</span></center>';
                else echo '. Auto-loading berita baru di background.</span></center>';
            }
            else echo '</span></center>';
        }
        if ($this->news['channels']) {
            foreach ($this->news['channels'] as $channel=>$kount) {    //  view topic news
                echo '<p style="margin-bottom:0;"><span class="i">'.ucwords($channel).'</span></p>';
                echo '<table border="0" cellspacing="0" cellpadding="0" summary="">';
                for ($i = 0; $i < count($links) ; $i++) {
                    $link = $links[$i];
                    if ($link['printed'] or $link['channel'] != $channel) continue;
                    $news_url = $_SERVER['PHP_SELF'].'?unxdt='.urlencode($link['unixtime']).'&amp;url='.urlencode($link['href']);
                    if ($link['cleantext'] == '') { # make sure hyperlink is clickable
                        $link_text = '...'.substr($link['href'],-30);
                    }
                    else
                        $link_text = $link['cleantext'];
                    if ($link['summary'])
                        $link_summary = '<br><span class="u">'.$link['summary'].'</span>';
                    else
                        $link_summary = '';
                    if ($link['list'])  // sign that this link is meant to be open as list, not as news detail
                        echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$_SERVER['PHP_SELF'].'?x=i&amp;anurl='.urlencode($link['href']).'">'.$link_text.'</a></span>'.$link['summary'].'</td></tr>';
                    elseif ($link['unixtime'])  { # if this link has known date in it
                        $date = date('H:i',$link['unixtime']);
                        $date_delta = str_time_delta($link['unixtime']);
                        if ($date == '00:00')   # time information may not available
                            $date_exp = $date_delta;
                        else
                            $date_exp = $date.', '.$date_delta;
                        echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$_SERVER['PHP_SELF'].'?unxdt='.urlencode($link['unixtime']).'&anurl='.htmlentities(urlencode($link['href'])).'" target="'.$frame_target.'">'.$link_text.'</a></span>'.$link_summary.'<b><small><span class="d">--'.$date_exp.'</span></small></b></td></tr>';
                    }
                    else
                        echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$_SERVER['PHP_SELF'].'?anurl='.urlencode($link['href']).'" target="'.$frame_target.'">'.$link_text.'</a></span>'.$link_summary.'</td></tr>';
                    $links[$i]['printed'] = 1;
                }
                echo '</table>';
            }
        }
        echo "<hr>";
        $stat_count = 0; $stat_val = 0;
        $stat_count2 = 0; $stat_val2 = 0;
        for ($i = 0; $i < count($links) ; $i++) {
            if ($links[$i]['printed']) continue;
            $len = strlen($links[$i]['cleantext']);
            if ($len == 0) continue;
            $links[$i]['score'] = $len;
            $links[$i]['score2'] = strlen($links[$i]['href']);
            $stat_val += $links[$i]['score'];
            $stat_val2 += $links[$i]['score2'];
            $stat_count++;
            $stat_count2++;
        }
        if ($stat_count) {
            $stat_avg = $stat_val/$stat_count;
            $stat_avg2 = $stat_val2/$stat_count2;
            echo '<table border="0" cellspacing="0" cellpadding="0" summary="">';
            for ($i = 0; $i < count($links) ; $i++) {
                if ($links[$i]['printed']) continue;
                if ($links[$i]['score'] < $stat_avg or $links[$i]['score2'] < $stat_avg2) continue;
                echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$_SERVER['PHP_SELF'].'?x=i&anurl='.urlencode($links[$i]['href']).'">'.$links[$i]['cleantext'].'</a></span> - <a href="'.$_SERVER['PHP_SELF'].'?anurl='.urlencode($links[$i]['href']).'" target="'.$frame_target.'">&gt;&gt;</a> </td></tr>';
                $links[$i]['printed'] = 1;
            }
            echo '</table>';
            echo '<hr>';
        }
        for ($i = 0; $i < count($links) ; $i++) {
            $link = $links[$i];
            if ($link['printed']) continue;
            if (trim($link['cleantext']) == '') continue;
            $news_url = $_SERVER['PHP_SELF'].'?unxdt='.urlencode($link['unixtime']).'&amp;url='.urlencode($link['href']);
            if ($link['cleantext'] == '') { # make sure hyperlink is clickable
                $link_text = '...'.substr($link['href'],-30);
            }
            else
                $link_text = $link['cleantext'];
            if ($link['list'])  // sign that this link is meant to be open as list, not as news detail
                echo '<tr><td valign="top">&bull;&nbsp;</td><td><span class="i"><a href="'.$_SERVER['PHP_SELF'].'?x=i&amp;anurl='.urlencode($link['href']).'">'.$link_text.'</a></span>'.$link['summary'].'</td></tr>';
            elseif ($link['unixtime'])  { # if this link has known date in it
                $date = date('H:i',$link['unixtime']);
                $date_delta = str_time_delta($link['unixtime']);
                if ($date == '00:00')   # time information may not available
                    $date_exp = $date_delta;
                else
                    $date_exp = $date.', '.$date_delta;
                echo '<a href="'.$_SERVER['PHP_SELF'].'?unxdt='.urlencode($link['unixtime']).'&amp;anurl='.urlencode($link['href']).'" target="'.$frame_target.'">'.$link_text.'</a></span>';
            }
            else
                echo '<a href="'.$_SERVER['PHP_SELF'].'?x=i&anurl='.urlencode($link['href']).'">'.$link_text.'</a></span>';
            echo ' | ';
        }
        echo '<p align="center"><a href="'.$_SERVER['PHP_SELF'].'?x=w" target="m">Home &gt;</a></p>';
    }
    function RenderAnyNewsDetail ($complete=True,$with_header=True,$strip_ads=False) {
        global $list_header_output, $url, $app;
        $content = $this->news['content'];
        if ($with_header) echo $list_header_output;
        if ($complete) {
            if ($this->news['date'] != '')
                echo '<small>'.date('Y-m-d H:i:s',$this->news['date']).'</small>';
            echo '<h3>'.$this->news['subtitle'].' '.$this->news['title'].'</h3>';
            echo '<p class="u">'.$this->news['reporter'].'</p>';
            echo '<span class="u">'.$content.'</span>';
        }
        else {
            echo '<span class=u>'.$content.'</span>';
        }
        if ($this->from_cache) echo '<p><small><span style="color:#666">(news from cache)</span> - <a href="'.$_SERVER['PHP_SELF'].'?unxdt='.$_REQUEST['unxdt'].'&amp;anurl='.$this->news['url'].'&cache_reload=1">Reload from Original</a></small>';
        echo '<p><small><a href="'.$this->news['url'].'" style="color:#666">'.$this->news['url'].'</a></small></p>';
    }
}
if ($app['cache']) {
    if (file_exists('./cache')) {
        if  (!is_writeable('./cache')) {
            $app['cache'] = FALSE;
            $list_footer = '<small><span style=\'color:red;\'><b>Optimization tips:</b> You would get better performance (via caching) by making sure this script can write in current folder to put the cache files. To do this, ssh/ftp to current folder, and do a <b>chmod 777 ./cache</b></span></small>'.$list_footer;
        }
    }
    else {
        if  (!is_writeable('.')) {
            $app['cache'] = FALSE;
            $list_footer = '<small><span style=\'color:red;\'><b>Optimization tips:</b> You would get better performance (via caching) by making sure this script can write in current folder to put the cache files. To do this, ssh/ftp to current folder, and either do a <b>chmod 777 .</b> OR <b>mkdir cache; chmod 777 ./cache</b></span></small>'.$list_footer;
        }
    }
}
if ($_REQUEST['pda']) {
    $_REQUEST['x'] = 'i';
    $_REQUEST['no'] = 'frame';
}
if (isset($_REQUEST['url'])) {
    $_REQUEST['param1'] = trim(mystripslashes($_REQUEST['param1']));
    $du = new DetikUsable($_REQUEST['url']);
    $du->SetModeDetail();
    if ($_REQUEST['cache_reload']) $du->SetSourceOrig();
    if ($app['proxy_mode']) { $du->SetModeNode(); $du->SetNodeServerUrl($app['proxy_url']);}
    $du->GetBuffer();
    $du->Parse();
    if ($_REQUEST['as_node']) $du->RenderNode($_REQUEST['cu']);
    elseif ($_REQUEST['wap']) $du->RenderDetailWap();
    else $du->Render();
}
elseif ($_REQUEST['x'] == '' and $_REQUEST['anurl']) {
    $du = new AnyNews();
    if ($_REQUEST['cache_reload']) $du->SetSourceOrig();
    $du->SetModeAnyNewsDetail();
    $du->url = $_REQUEST['anurl'];
    $du->GetBuffer();
    $du->Render();
}
elseif ($_REQUEST['x']=='i' and $_REQUEST['anurl'] != '') {
    $du = new AnyNews();
    $du->SetModeAnyNewsList();
    $du->cache_prefix = 'an_';
    $du->url = $_REQUEST['anurl'];
    if ($_REQUEST['cache_reload'])
        $du->SetSourceOrig();
    $du->GetBuffer();
    $title_name = $du->url;
    foreach ($an_m as $am) {
        if ($am['url'] == $title_name)
            $title_name = $am['name'].'</span>.<span style="color:#119911;">usable';
    }
    echo $list_header_output.'<p align=center style="margin-bottom:0;"><b><a href="'.$author_website.'" title="Home" target="_top"><span style="color:#991111;">'.$title_name.'</span></a><br><small>'.$tgl_lengkap.'</small></b> <a href="'.$_SERVER['PHP_SELF'].'?'.merge_query(array('cache_reload'=>1)).'" class="button">Reload</a>';
    if ($du->news['cache']) echo '<div id="cache_set">';
    $du->Render();
    flush();
    if ($du->news['cache']) echo '</div>';
    if ($du->news['cache'] and (time() - $du->news['cache'])>$du->newslist_cache_revalidate and !$_REQUEST['pda']) {
        $du->SetSourceOrig(); $du->GetBuffer(); $du->Parse();
        echo '<div id="latest_set" style="display:none;">'; $du->Render(); echo '</div>';
        echo '<script>document.getElementById("latest_set").style.display = "";document.getElementById("cache_set").style.display = "none";</script>';
    }
    global $stream_compress;
    $temp_stream = 'Stream: '; if (!$app['proxy_mode']) $temp_stream .= 'N/A'; elseif ($stream_compress) $temp_stream .= 'Compressed'; else $temp_stream .= 'Uncompressed';
    show_footer($du->url, $temp_stream);
}
elseif ($_REQUEST['x']=='i' or $_REQUEST['no']=='frame' or $_REQUEST['no']=='gm' or $_REQUEST['no']=='rss2' or $_REQUEST['no']=='wap') {
$du = new DetikUsable();
if ($app['proxy_mode']) {   //retrieve serialized+processed html containing ready-to-view array from other detik.usable node.
    $du->SetModeNode();
    $du->SetNodeServerUrl($app['proxy_url']);
    $du->SetModeList();
    $du->GetBuffer();
    $du->Parse();
}
else {  //retrieve raw html from detik, parse, and output as new detik.usable-style design
    $du->SetModeList();
    if ($_REQUEST['cache_reload'])
        $du->SetSourceOrig();
    $du->GetBuffer();
    $du->Parse();
}
if ($_REQUEST['as_node'])
    $du->RenderNode($_REQUEST['cu']);
elseif ($_REQUEST['no'] == 'rss2')
    $du->RenderListRss($_REQUEST['complete']);
elseif ($_REQUEST['no'] == 'wap')
    $du->RenderListWap();
else {
    echo $list_header_output.$list_top_output;
    if ($du->news['cache']) echo '<div id="cache_set">';
    $du->Render();
    flush();
    if ($du->news['cache']) echo '</div>';
    if ($du->news['cache'] and (time() - $du->news['cache'])>$du->newslist_cache_revalidate and !$_REQUEST['pda']) {
        $du->SetSourceOrig(); $du->GetBuffer(); $du->Parse();
        echo '<div id="latest_set" style="display:none;">'; $du->Render(); echo '</div>';
        echo '<script>document.getElementById("latest_set").style.display = "";document.getElementById("cache_set").style.display = "none";</script>';
    }
    global $stream_compress;
    $temp_stream = 'Stream: '; if (!$app['proxy_mode']) $temp_stream .= 'N/A'; elseif ($stream_compress) $temp_stream .= 'Compressed'; else $temp_stream .= 'Uncompressed';
    show_footer($du->url, $temp_stream);
}
}
elseif ($_REQUEST['x']=='w') {
foreach ($an_m as $m)
    $an_welcome_list[] = '<a href="'.$_SERVER['PHP_SELF'].'?x=i&anurl='.$m['url'].'" target="c">'.$m['name'].'</a>';
$an_welcome_list = join(' | ',$an_welcome_list);
$welcomepage_output = '<center><h1><a href="'.$author_website.'" title="detik.usable, version '.$app['version'].'" target="_top" style="text-decoration:none;"><span style= "color:#991111;">detik</span>.<span style= "color:#119911;">usable</span></a></h1><br><small>v'.$app['version'].'</small></center><br><p align="center"><b>Lihat:</b><br><a href="'.$_SERVER['PHP_SELF'].'?x=i" target="c" title="Refresh">Normal</a> | <a href="'.$_SERVER['PHP_SELF'].'?no=frame" target="_top" title="Untuk pembenci frame">Tanpa frame</a><br><a href="'.$_SERVER['PHP_SELF'].'?pda=1" target="_top" title="Untuk PDA/Handphone yang tidak mendukung javascript">Small Screen</a> | <a href="'.$_SERVER['PHP_SELF'].'?no=wap" target="_top" title="WAP mode buat handphone jadul">WAP</a><br><a href="'.$_SERVER['PHP_SELF'].'?no=rss2" target="_top" title="Use any rss reader!">RSS2 feed</a> | <a href="'.$_SERVER['PHP_SELF'].'?no=rss2&complete=1" target="_top" title="Note: could be much slower">RSS2 feed w/ body</a><br><a href="'.$_SERVER['PHP_SELF'].'?no=bcache" target="c">Browse cache</a> | <a href="'.$_SERVER['PHP_SELF'].'?x=s" target="_top">Source code</a> <br><p align="center"><b>Atur:</b><br> <a href="'.$_SERVER['PHP_SELF'].'?au=1">Check update</a> | <a href="'.$_SERVER['PHP_SELF'].'?cm=1">Reset Cache</a> | <a href="'.$app['update_url'].'" target="_top" title="Get latest detik.usable  direct from repository">Download</a></p> <br><center><form action="'.$_SERVER['PHP_SELF'].'" target="c"><b>AnyNews<sup>Beta</sup></b><br><input type="hidden" name="x" value="i">'.$an_welcome_list.'<br>Custom: <input type="text" name="anurl" value="http://" size="30"><input type="submit" value="Go"></form></p></center><p align="center"><!--info--><a href="'.$_SERVER['PHP_SELF'].'?x=w&page=2">Next &gt;</a><br><hr width="200"><center><small><a href="mailto:'.$author_email.'">'.$author_name.'</a>, dari <a href="mailto:dodysw@gmail.com">dsw s/h</a></small></center></body></html>';
$con = '<ul>';
foreach ($contributors as $c) $con .= '<li><a href="mailto:'.$c[1].'">'.$c[0].'</a>, '.$c[2].'</li>';
$con .= '</ul>';
$welcomepage_output_2 = '<center><h1><a href="'.$author_website.'" title="detik.usable, version '.$app['version'].'" target="_top" style="text-decoration:none;"><span style= "color:#991111;">detik</span>.<span style= "color:#119911;">usable</span></a></h1></center><h4>Last Changes</h4><p>'.nl2br($app['version_description']).'</p><h3>Purpose</h3><p>Situs ini ditujukan untuk mendemonstrasikan <i>look and feel</i> dari potensi sebuah situs berita yg usable: cepat, bersih, dan mudah digunakan.<p>Bagi yang ingin nge-detik.usable, bisa copy and paste <a href="'.$_SERVER['PHP_SELF'].'?x=s" target="_top">source code situs ini</a> (public domain dan hanya satu file), pasang di hosting yg mendukung php, <b>untuk keperluan anda sendiri</b>.
<h3>Resources</h3>
<p><a href="http://groups-beta.google.com/group/detikusable/subscribe"> Daftar milis detik.usable</a> (announcement release baru)
<p>View <a href="http://miaw.tcom.ou.edu/~dody/du/images/DetikScreen1.png">screenshot in PDA</a> (<a href="mailto:pursena@advokasi.com">Bagus Pursena</a>). Seems like old Windows Pocket PC + IE.
<h3>Kontributor</h3>Sorry kalau ada yang kelewat :)'.$con.'<p align="center"><br><br><a href="'.$_SERVER['PHP_SELF'].'?x=w&page=1">&lt; Back</a><br><hr width="200"><center><small><a href="mailto:'.$author_email.'">'.$author_name.'</a>, dari <a href="mailto:dodysw@gmail.com">dsw s/h</a></small></center>
</body>
</html>';
    $page = $_REQUEST['page'] == ''? '1': $_REQUEST['page'];
    echo $header_ouput;
    if ($page == '1') echo $welcomepage_output;
    elseif ($page == '2') echo $welcomepage_output_2;
}
elseif ($_REQUEST['x']=='s') {
    show_source(__FILE__);
}
elseif ($_REQUEST['au']) {
    if (!$_REQUEST['commit']) {
        $target_filename = basename(__FILE__);
        echo $list_header_output;
        echo '<h4>Detik.Usable Updates</h4>';
        if (!is_writable(__FILE__)) {
            if (@!chmod(__FILE__,0777)) {    //test ubah permission
                if (!is_writable(dirname(__FILE__))) {  // coba simpan ke file yg berbeda di folder yg sama
                    echo '<p>Sorry, I do not have write permission to  "'.__FILE__.'". Try changing file permission, eg: <b>chmod 777 '.__FILE__.'</b>.';
                    echo "<p><a href={$_SERVER['PHP_SELF']}?x=w>Back to welcome page</a>";
                    exit;
                }
                else {
                    $target_filename = 'index2.php';
                    echo '<b>Success, will be written to '.dirname(__FILE__).'/'.$target_filename.'</b>';
                }
            }
            else {
            }
        }
        else {
        }
        flush();
        $url_parsed = parse_url($app['update_url']);
        $sock = new DuSock($url_parsed['host'],$url_parsed['port']!=''? $url_parsed['port'] : 80);
        if (!$sock->socket_open()) { die('Cannot contact repository at '.$app['update_url']);}
        $sock->sock_send_request($url_parsed['path'].'?'.$url_parsed['query']);
        $sock->sock_recv_header();
        $buffers = $sock->sock_recv_all();
        if ($buffers == '') {
            echo '<h1>update url:'.$app['update_url'].' cannot be contacted!</h1>';
            exit;
        }
        if (preg_match('/\$app\[\'version\'\]\s*=\s*"([^"]*)"/i',$buffers,$remote_res))
            $remote_version = $remote_res[1];
        else
            $remote_version = '0.0';
        list($remote_major, $remote_minor) = explode('.',$remote_version,2);
        list($local_major, $local_minor) = explode('.',$app['version'],2);
        echo '<ul><li>Versi detik.usable ini: <b>'.$local_major.'.'.$local_minor.'</b><li>Versi detik.usable terbaru: <b>'.$remote_major.'.'.$remote_minor.'</b></ul>';
        if ($remote_major > $local_major or ($remote_major == $local_major and $remote_minor > $local_minor))
            echo "<p><form method=get action={$_SERVER['PHP_SELF']}><input type=hidden name=au value=1><input type=hidden name=commit value=1><input type=hidden name=target_filename value='".htmlentities($target_filename)."'><input type=submit value=\"Update ke $remote_version\"></form>";
        else echo "<p>detik.usable ini sudah versi terbaru<p><form method=get action={$_SERVER['PHP_SELF']}><input type=hidden name=au value=1><input type=hidden name=commit value=1><input type=hidden name=target_filename value='".htmlentities($target_filename)."'><input type=submit value=\"Force update again\"></form>";
        echo "<p><a href={$_SERVER['PHP_SELF']}?x=w>Back to welcome page</a>";
    }
    else {
        $url_parsed = parse_url($app['update_url']);
        $sock = new DuSock($url_parsed['host'],$url_parsed['port']!=''? $url_parsed['port'] : 80);
        if (!$sock->socket_open()) die('Cannot contact repository at '.$app['update_url']);
        $sock->sock_send_request($url_parsed['path'].'?'.$url_parsed['query']);
        $sock->sock_recv_header();
        $buffers = $sock->sock_recv_all();
        if ($buffers == '') {
            write_error("auto_update: Unable to get latest version at {$app['update_url']}");
            echo "<p><a href={$_SERVER['PHP_SELF']}?x=w>Back to welcome page</a>";
        }
        else {
            $target = dirname(__FILE__).'/'.$_REQUEST['target_filename'];
            echo '<br>...writing to '.$target;
            $fp = fopen($target,'w');
            fwrite($fp,$buffers);
            fclose($fp);
            echo '<br><b>Success</b>';
            echo $list_header_output;
            echo '<h4>Update Berhasil</h4>';
            $redirect = dirname($_SERVER['PHP_SELF']).'/'.$_REQUEST['target_filename'];
            $redirect = str_replace('//','/',$redirect);
            echo '<p><a href="'.$redirect.'" target="_top">Reload detik.usable</a>';
        }
    }
}
elseif ($_REQUEST['cm']) {
    if (!$_REQUEST['commit'] or ($_REQUEST['confirm_text'] != $_REQUEST['confirm_text2'])) {
        $dirsize = 0;
        $dh = opendir('cache');
        while (false !== ($filename = readdir($dh))) if (($file_name != '.' && $file_name != '..')) $dirsize += filesize('cache/'.$filename);
        $cache_size = round($dirsize/1024,2);
        echo $list_header_output;
        echo '<h4>Pengaturan Cache</h4>';
        echo '<p>Total space yang digunakan cache: '.$cache_size.' KB';
        if ($cache_size) {
            $crazy_number = rand(1000,9999);
            if ($cache_size > 0) echo '<p><form action="'.$_SERVER['PHP_SELF'].'"><input type=hidden name=cm value="1"><input type=hidden name=commit value="1"><p>Untuk menghindari search engine spiderbot ngutak ngatik, tulis angka berikut ini untuk mengosongkan cache: <b>'.$crazy_number.'</b><br>';
            if ($_REQUEST['confirm_text'] != $_REQUEST['confirm_text2']) {
                echo '<span style="color:f00">Try again</span>';
            }
            echo '<input type=text name=confirm_text><input type=hidden name=confirm_text2 value="'.$crazy_number.'"><input type=submit></form>';
        }
        echo "<p><a href={$_SERVER['PHP_SELF']}?x=w>Back to welcome page</a>";
    }
    else {
        $dh = opendir('cache');
        while (false !== ($filename = readdir($dh))) if (($file_name != '.' && $file_name != '..')) @unlink('cache/'.$filename);
        echo $list_header_output;
        echo '<h4>Cache telah dikosongkan</h4>';
        echo "<p><a href={$_SERVER['PHP_SELF']}?x=w>Back to welcome page</a>";
    }
}
elseif ($_REQUEST['no'] == 'bcache') {
    $display = '';
    $dh = opendir('cache');
    $cached_news = array();
    while (false !== ($filename = readdir($dh))) {
        if ($filename == '.' or $filename == '..') continue;
        ob_start();
        readfile('cache/'.$filename);
        $buffer = ob_get_contents();
        ob_end_clean();
        $news = unserialize($buffer);
        unset($news['content']);
        if ($news['date'] == '')
            $str_date = 'unknown';
        else {
            $tgl = getdate($news['date']);
            $str_date = mktime(0,0,0,$tgl['mon'],$tgl['mday'],$tgl['year']);
        }
        $cached_news[$str_date][] = $news;
    }
    if (!$cached_news) {
        $display .= $list_header_output;
        $display .= '<h3>Cache is empty</h3>'.$list_footer;
        echo $display;
        return;
    }
    echo $list_header_output;
    krsort($cached_news,SORT_NUMERIC);
    foreach ($cached_news as $str_date=>$news_list) {
        if ($str_date == 'unknown') continue;
        $unx_date_group = $str_date;
        $str_date = $hari[date('w',$unx_date_group)].',&nbsp;'.date('j',$unx_date_group).'&nbsp;'.$bulan[date('n',$unx_date_group)].date(' Y',$unx_date_group);
        echo '<p><b>'.$str_date.'</b>';
        echo '<small>';
        foreach ($news_list as $news) {
            $dateme = date('H:i',$news['date']);
            if ($dateme == '00:00') $dateme = '';
            else $dateme .= ' - ';
            echo '<br>'.$dateme.'<a href="'.$_SERVER['PHP_SELF'].'?url='.urlencode($news['url']).'" target="m">'.$news['title'].'</a>';
        }
        echo '</small>';
    }
    if ($cached_news['unknown']) {
        echo '<p><b>Unknown date</b>';
        echo '<small>';
        foreach ($cached_news['unknown'] as $news) {
            echo '<br> - <a href="'.$_SERVER['PHP_SELF'].'?url='.urlencode($news['url']).'" target="m">'.$news['title'].'</a>';
        }
        echo '</small>';
    }
    echo '<p align="center"><a href="'.$_SERVER['PHP_SELF'].'?x=w" target="m">Home &gt;</a></p>';
    show_footer();
}
else {
    echo $doctype;
?>
<html>
    <head><title>detik.usable (<?=$tgl_lengkap?>)</title></head>
    <frameset cols="50%,*">
    <frame name="c" target="m" src="<?=$_SERVER['PHP_SELF']?>?x=i">
    <frame name="m" target="_top" src="<?=$_SERVER['PHP_SELF']?>?x=w">
    <noframes>
    <body>
    Looks like u need the <a href="<?=$_SERVER['PHP_SELF']?>?no=frame">non-frame version</a>.
    </body>
    </noframes>
    </frameset>
</html> <?
}
?>
